ROFI(1)                                                                                 General Commands Manual                                                                                ROFI(1)

NNAAMMEE
       rrooffii - A window switcher,  application launcher, ssh dialog and dmenu replacement

SSYYNNOOPPSSIISS
       rrooffii [ -show _m_o_d_e ]|[ -dmenu ]|[ -e _m_s_g ] [ CONFIGURATION ]

DDEESSCCRRIIPPTTIIOONN
       rrooffii  is  an X11 pop-up window switcher, run dialog, dmenu replacement, and more. It focuses on being fast to use and have minimal distraction. It supports keyboard and mouse navigation, type
       to filter, tokenized search and more.

UUSSAAGGEE
       rrooffii's main functionality is to assist in your workflow, allowing you to quickly switch between windows, start applications or log into a remote machine via sssshh.  There are different _m_o_d_i for
       different types of actions.

       rrooffii can also function as (drop-in) replacement for ddmmeennuu((11)).

   RRuunnnniinngg rrooffii
       To launch rrooffii directly in a certain mode, specify a mode with rrooffii --sshhooww <<mmooddee>>.  To show the rruunn dialog:

              rofi -show run

   EEmmuullaattiinngg ddmmeennuu
       rrooffii can emulate ddmmeennuu((11)) (a dynamic menu for X) when launched with the --ddmmeennuu flag.

       The website for ddmmeennuu can be found here ⟨http://tools.suckless.org/dmenu/⟩.

       rrooffii  does not aim to be 100% compatible with ddmmeennuu. There are simply too many different flavors of ddmmeennuu.  The idea is that the basic usage command-line flags are obeyed, theme-related flags
       are not.  Besides, rrooffii offers some extended features (like multi-select, highlighting, message bar, extra key bindings).

   DDiissppllaayy EErrrroorr mmeessssaaggee
       rrooffii error dialog can also be called from the command line.

              rofi -e "my message"

       Markup support can be enabled, see CONFIGURATION options.

CCOONNFFIIGGUURRAATTIIOONN
       There are currently three methods of setting configuration options (evaluated in order below):

       • System configuration file  (for example //eettcc//rrooffii..rraassii or old format //eettcc//rrooffii..ccoonnff).  It first checks XDG_CONFIG_DIRS  and then SYSCONFDIR (that is passed at compile time).  It  loads  the
         first config file it finds, it does not merge multiple system configuration files.

       • Xresources: A method of storing key values in the Xserver. See here ⟨https://en.wikipedia.org/wiki/X_resources⟩ for more information.

       • Rasi theme file: The new _t_h_e_m_e format can be used to set configuration values.

       • Configuration  File: This uses the same format as the Xresources file.  By default it looks in XXDDGG__CCOONNFFIIGG__HHOOMMEE/rofi/config, but can be overridden on commandline.  By default XXDDGG__CCOONNFFIIGG__HHOOMMEE
         defaults to $$HHOOMMEE//..ccoonnffiigg. (See rrooffii --hh for current location).  This is the recommended way of configuring rrooffii.

       • Command-line options: Arguments passed to rrooffii.

       TTIIPP: To get a template config file run: rrooffii --dduummpp--xxrreessoouurrcceess >> rrooffii--eexxaammppllee..ccoonnffiigg.

       NNOOTTEE: In version 1.4.0 we support configuration in a new format, a config for this can be generated by: rrooffii --dduummpp--ccoonnffiigg >> ccoonnffiigg..rraassii

       NNOOTTEE: If you want to use the new configuration format, the config file should be named ccoonnffiigg..rraassii.

       NNOOTTEE: You can upgrade to the new configuration file format using rrooffii --uuppggrraaddee--ccoonnffiigg

       The Xresources file expects options starting with rrooffii.. followed by its name. An example to set the number of lines:

              rofi.lines: 10

       Command-line options override settings from the Xresources file. The same option set as argument — prefixed with a '-':

              rofi -lines 10

       To get a list of available options formatted as Xresources entries, run:

              rofi -dump-xresources

       The configuration system supports the following types:

       • string

       • integer (signed and unsigned)

       • char

       • Boolean

       Boolean options have a non-default command-line syntax. Example to enable option X:

              -X

       To disable option X:

              -no-X

       Below is a list of the most important options:

   GGeenneerraall
       --hheellpp

       The help option shows the full list of command-line options and the current set values.  These include dynamic (run-time generated) options.

       --vveerrssiioonn

       Show the rrooffii version and exit.

       --dduummpp--ccoonnffiigg

       Dump the current active configuration, in rasi format, to stdout and exit.  Information about the rasi format can be found in the rrooffii--tthheemmee((55)) manpage.

       --dduummpp--tthheemmee

       Dump the current active theme, in rasi format, to stdout and exit.

       --dduummpp--xxrreessoouurrcceess

       Dump the current active configuration, in Xresources format, to stdout.  This does not validate all passed values (for example, colors).

       --tthhrreeaaddss _n_u_m

       Specify the number of threads rrooffii should use:

       • 0: Autodetect the number of supported hardware threads.

       • 1: Disable threading

       • 2..N: Specify the maximum number of threads to use in the thread pool.

       --ddiissppllaayy _d_i_s_p_l_a_y

       The X server to contact. Default is $$DDIISSPPLLAAYY.

       --ddmmeennuu

       Run rrooffii in dmenu mode. This allows for interactive scripts.  In ddmmeennuu mode, rrooffii reads from STDIN, and output to STDOUT.  A simple example, displaying three pre-defined options:

              echo -e "Option #1\nOption #2\nOption #3" | rofi -dmenu

       Or get the options from a script:

               /my_script.sh | rofi -dmenu

       --sshhooww _m_o_d_e

       Open rrooffii in a certain mode. Available modes are wwiinnddooww, rruunn, ddrruunn, sssshh, ccoommbbii.  The special argument kkeeyyss can be used to open a searchable list of supported key bindings (see _K_E_Y _B_I_N_D_I_N_G_S)

       To show the run-dialog:

              rofi -show run

       --mmooddii _m_o_d_e_1_,_m_o_d_e_2

       Specify an ordered, comma-separated list of modes to enable.  Enabled modes can be changed at runtime. Default key is CCttrrll++TTaabb.  If no modes are specified, all configured modes  will  be  en‐
       abled.  To only show the rruunn and sssshh launcher:

              rofi -modi "run,ssh" -show run

       Custom modes can be added using the internal ssccrriipptt mode. Each such mode has two parameters:

              <name>:<script>

       Example: Have a mode called 'Workspaces' using the ii33__sswwiittcchh__wwoorrkkssppaacceess..sshh script:

              rofi -modi "window,run,ssh,Workspaces:i3_switch_workspaces.sh" -show Workspaces

       Notes: The i3 window manager does not like commas in the command when specifying an exec command.  For that case '#' can be used as an separator.

       --ccaassee--sseennssiittiivvee

       Start in case sensitive mode.  This option can be changed at run-time using the --kkbb--ttooggggllee--ccaassee--sseennssiittiivviittyy key binding.

       --ccyyccllee

       Cycle through the result list. Default is 'true'.

       --ffiilltteerr _f_i_l_t_e_r

       Filter the list by setting text in input bar to _f_i_l_t_e_r

       --ccoonnffiigg _f_i_l_e_n_a_m_e

       Load an alternative configuration file.

       --ccaacchhee--ddiirr _f_i_l_e_n_a_m_e

       Directory that is used to place temporary files, like history.

       --ssccrroollll--mmeetthhoodd _m_e_t_h_o_d

       Select the scrolling method. 0: Per page, 1: continuous.

       --[[nnoo--]]sshhooww--mmaattcchh

       Show the indicator that shows what part of the string is matched.

              Default: *true*

       --nnoo--llaazzyy--ggrraabb

       Disables lazy grab, this forces the keyboard being grabbed before gui is shown.

       --nnoo--pplluuggiinnss

       Disable plugin loading.

       --pplluuggiinn--ppaatthh _d_i_r_e_c_t_o_r_y

       Specify the directory where rrooffii should look for plugins.

       --sshhooww--iiccoonnss

       Show application icons in ddrruunn and wwiinnddooww modes.

       --iiccoonn--tthheemmee

       Specify icon theme to be used.  If not specified default theme from DE is used, _A_d_w_a_i_t_a and _g_n_o_m_e themes act as fallback themes.

       --mmaarrkkuupp

       Use Pango markup to format output wherever possible.

       --nnoorrmmaall--wwiinnddooww

       Make rrooffii react like a normal application window. Useful for scripts like Clerk that are basically an application.

   MMaattcchhiinngg
       --mmaattcchhiinngg _m_e_t_h_o_d

       Specify the matching algorithm used.  Current the following methods are supported.

       • nnoorrmmaall: match the int string

       • rreeggeexx: match a regex input

       • gglloobb: match a glob pattern

       • ffuuzzzzyy: do a fuzzy match

       Default: _n_o_r_m_a_l

       Note: glob matching might be slow for larger lists

       --ttookkeenniizzee

       Tokenize the input.

       --ddrruunn--ccaatteeggoorriieess _c_a_t_e_g_o_r_y_1,_c_a_t_e_g_o_r_y_2

       Only show desktop files that are present in the listed categories.

       --ddrruunn--mmaattcchh--ffiieellddss _f_i_e_l_d_1,_f_i_e_l_d_2,...

       When using ddrruunn, match only with the specified Desktop entry fields.  The different fields are:

       • nnaammee: the application's name

       • ggeenneerriicc: the application's generic name

       • eexxeecc: the application's  executable

       • ccaatteeggoorriieess: the application's categories

       • ccoommmmeenntt: the application comment

       •

       aallll: all of the above

       Default: _n_a_m_e_,_g_e_n_e_r_i_c_,_e_x_e_c_,_c_a_t_e_g_o_r_i_e_s_,_k_e_y_w_o_r_d_s

       --ddrruunn--ddiissppllaayy--ffoorrmmaatt

       The format string for the ddrruunn dialog:

       • nnaammee: the application's name

       • ggeenneerriicc: the application's generic name

       • eexxeecc: the application's  executable

       • ccaatteeggoorriieess: the application's categories

       • ccoommmmeenntt: the application comment

       Pango markup can be used to formatting the output.

              Default: {name} [<span weight='light' size='small'><i>({generic})</i></span>]

       Note: Only fields enabled in --ddrruunn--mmaattcchh--ffiieellddss can be used in the format string.

       --[[nnoo--]]ddrruunn--sshhooww--aaccttiioonnss

       Show actions present in the Desktop files.

              Default: false

       --wwiinnddooww--mmaattcchh--ffiieellddss _f_i_e_l_d_1,_f_i_e_l_d_2,...

       When using window mode, match only with the specified fields.  The different fields are:

       • ttiittllee: window's title

       • ccllaassss: window's class

       • rroollee: window's role

       • nnaammee: window's name

       • ddeesskkttoopp: window's current desktop

       •

       aallll: all of the above

       Default: _a_l_l

       --mmaattcchhiinngg--nneeggaattee--cchhaarr _c_h_a_r

       Set the character used to negate the query (i.e. if it does nnoott match the next keyword ).  Set to '\x0' to disable.

              Default: '-'

   LLaayyoouutt
       Most of the following options are ddeepprreeccaatteedd and should not be used. Please use the new theme format to customize rrooffii. More information about the new format can be found in the rrooffii--tthheemmee((55))
       manpage.

       --lliinneess

       Maximum number of lines to show before scrolling.

              rofi -lines 25

       Default: _1_5

       --ccoolluummnnss

       Number of columns to show before scrolling.

              rofi -columns 2

       Default: _1

       --wwiiddtthh [value]

       Set width of menu. [[vvaalluuee]] is specified in percentage.

              rofi -width 60

       If [[vvaalluuee]] is larger then 100, size is set in pixels. Example to span a full-HD monitor:

              rofi -width 1920

       If [[vvaalluuee]] is negative, it tries to estimates a character width. To show 30 characters in a row:

              rofi -width -30

       Character width is a rough estimate, and might not be correct, but should work for most monospaced fonts.

       Default: _5_0

       --llooccaattiioonn

       Specify where the window should be located. The numbers map to the following locations on screen:

                1 2 3
                8 0 4
                7 6 5

       Default: _0

       --ffiixxeedd--nnuumm--lliinneess

       Keep a fixed number of visible lines (See the --lliinneess option.)

       --ppaaddddiinngg

       Define the inner margin of the window.

       Default: _5

       --ffuullllssccrreeeenn

       Use the full-screen height and width.

       --ssiiddeebbaarr--mmooddee

       Open in sidebar-mode. In this mode a list of all enabled modes is shown at the bottom.  (See --mmooddii option) To show sidebar, use:

              rofi -show run -sidebar-mode -lines 0

       --eehh _n_u_m_b_e_r

       Set row height (in chars) Default: _1

       --aauuttoo--sseelleecctt

       When one entry is left, automatically select it.

       --mm _n_u_m

       --mm _n_a_m_e

       --mmoonniittoorr _n_u_m

       --mmoonniittoorr _n_a_m_e

       Select monitor to display rrooffii on.  It accepts as input: _p_r_i_m_a_r_y (if primary output is set), the _x_r_a_n_d_r output name, or integer number (in order of detection). Negative  numbers  are  handled
       differently:

       • --11: the currently focused monitor.

       • --22: the currently focused window (that is, rrooffii will be displayed on top of the focused window).

       • --33: Position at mouse (overrides the location setting to get normal context menu behavior.)

       • --44: the monitor with the focused window.

       •

       --55: the monitor that shows the mouse pointer.

       Default: _-_5

       See rrooffii --hh output for the detected monitors, their position, and size.

       --tthheemmee _f_i_l_e_n_a_m_e

       Path to the new theme file format. This overrides the old theme settings.

       --tthheemmee--ssttrr _s_t_r_i_n_g

       Allow theme parts to be specified on the command line as an override.

       For example:

              rofi -theme-str '#window { fullscreen: true; }'

       This option can be specified multiple times.

       --ddppii  _n_u_m_b_e_r

       Override the default DPI setting.

       • If set to 00, it tries to auto-detect based on X11 screen size (similar to i3 and GTK).

       • If set to 11, it tries to auto-detect based on the size of the monitor that rrooffii is displayed on (similar to latest Qt 5).

       --sseelleecctteedd--rrooww _s_e_l_e_c_t_e_d _r_o_w

       Select a certain row.

       Default: _0

   PPAATTTTEERRNN sseettttiinngg
       --tteerrmmiinnaall

       Specify which terminal to start.

              rofi -terminal xterm

       Pattern: _{_t_e_r_m_i_n_a_l_}

       Default: _x_-_t_e_r_m_i_n_a_l_-_e_m_u_l_a_t_o_r

       --sssshh--cclliieenntt _c_l_i_e_n_t

       Override the used sssshh client.

       Pattern: _{_s_s_h_-_c_l_i_e_n_t_}

       Default: _s_s_h

   SSSSHH sseettttiinnggss
       --sssshh--ccoommmmaanndd _c_m_d

       Set the command to execute when starting a ssh session.  The pattern _{_h_o_s_t_} is replaced by the selected ssh entry.

       Pattern: _{_s_s_h_-_c_l_i_e_n_t_}

       Default: _{_t_e_r_m_i_n_a_l_} _-_e _{_s_s_h_-_c_l_i_e_n_t_} _{_h_o_s_t_}

       --ppaarrssee--hhoossttss

       Parse the //eettcc//hhoossttss file for entries.

       Default: _d_i_s_a_b_l_e_d

       --ppaarrssee--kknnoowwnn--hhoossttss --nnoo--ppaarrssee--kknnoowwnn--hhoossttss

       Parse the  //..sssshh//kknnoowwnn__hhoossttss file for entries.

       Default: _e_n_a_b_l_e_d

   RRuunn sseettttiinnggss
       --rruunn--ccoommmmaanndd _c_m_d

       Set command (_{_c_m_d_}) to execute when running an application.  See _P_A_T_T_E_R_N.

       Default: _{_c_m_d_}

       --rruunn--sshheellll--ccoommmmaanndd _c_m_d

       Set command to execute when running an application in a shell.  See _P_A_T_T_E_R_N.

       Default: _{_t_e_r_m_i_n_a_l_} _-_e _{_c_m_d_}

       --rruunn--lliisstt--ccoommmmaanndd _c_m_d

       If set, use an external tool to generate list of executable commands. Uses rruunn--ccoommmmaanndd.

       Default: _{_c_m_d_}

   WWiinnddooww sswwiittcchheerr sseettttiinnggss
       --wwiinnddooww--ffoorrmmaatt _f_o_r_m_a_t

       Format what is being displayed for windows.

       _f_o_r_m_a_t: {field[:len]}

       _f_i_e_l_d:

       • ww: desktop name

       • tt: title of window

       • nn: name

       • rr: role

       • cc: class

       _l_e_n:  maximum  field length (0 for auto-size). If length and window _w_i_d_t_h are negative, field length is _w_i_d_t_h _- _l_e_n.  if length is positive, the entry will be truncated or padded to fill that
       length.

       default: {w}  {c}   {t}

       --wwiinnddooww--ccoommmmaanndd _c_m_d

       Set command to execute on selected window for a custom action.  See _P_A_T_T_E_R_N.

       Default: _"_w_m_c_t_r_l _-_i _-_R _{_w_i_n_d_o_w_}_"

       --wwiinnddooww--tthhuummbbnnaaiill

       Show window thumbnail (if available) as icon in the window switcher.

   CCoommbbii sseettttiinnggss
       --ccoommbbii--mmooddii _m_o_d_e_1,_m_o_d_e_2

       The modi to combine in combi mode.  For syntax to --ccoommbbii--mmooddii, see --mmooddii.  To get one merge view, of wwiinnddooww,rruunn, and sssshh:

              rofi -show combi -combi-modi "window,run,ssh" -modi combi

       NNOOTTEE: The i3 window manager does not like commas in the command when specifying an exec command.  For that case '#' can be used as a separator.

   HHiissttoorryy aanndd SSoorrttiinngg
       --ddiissaabbllee--hhiissttoorryy --nnoo--ddiissaabbllee--hhiissttoorryy (re-enable history)

       Disable history

       --ssoorrtt to enable --nnoo--ssoorrtt to disable

       Enable, disable sorting.  This setting can be changed at runtime (see --kkbb--ttooggggllee--ssoorrtt).

       --ssoorrttiinngg--mmeetthhoodd 'method' to specify the sorting method.

       There are 2 sorting method:

       • levenshtein (Default)

       • fzf sorting.

   DDmmeennuu ssppeecciiffiicc
       --sseepp _s_e_p_a_r_a_t_o_r

       Separator for ddmmeennuu. Example: To show a list of 'a' to 'e' with '|' as a separator:

              echo "a|b|c|d|e" | rofi -sep '|' -dmenu

       --pp _p_r_o_m_p_t

       Specify the prompt to show in ddmmeennuu mode. For example, select 'monkey', a,b,c,d, or e.

              echo "a|b|c|d|e" | rofi -sep '|' -dmenu -p "monkey:"

       Default: _d_m_e_n_u

       --ll _n_u_m_b_e_r _o_f _l_i_n_e_s _t_o _s_h_o_w

       Maximum number of lines the menu may show before scrolling.

              rofi -lines 25

       Default: _1_5

       --ii

       Makes ddmmeennuu searches case-insensitive

       --aa _X

       Active row, mark _X as active. Where _X is a comma-separated list of python(1)-style indices and ranges, e.g.  indices start at 0, -1 refers to the last row with -2  preceding  it,  ranges  are
       left-open and right-close, and so on. You can specify:

       • A single row: '5'

       • A range of (last 3) rows: '-3:'

       • 4 rows starting from row 7: '7:11' (or in legacy notation: '7-10')

       • A set of rows: '2,0,-9'

       • Or any combination: '5,-3:,7:11,2,0,-9'

       --uu _X

       Urgent row, mark _X as urgent. See --aa option for details.

       --oonnllyy--mmaattcchh

       Only return a selected item, do not allow custom entry.  This mode always returns an entry. It will not return if no matching entry is selected.

       --nnoo--ccuussttoomm

       Only return a selected item, do not allow custom entry.  This mode returns directly when no entries given.

       --ffoorrmmaatt _f_o_r_m_a_t

       Allows the output of dmenu to be customized (N is the total number of input entries):

       • 's' selected string

       • 'i' index (0 - (N-1))

       • 'd' index (1 - N)

       • 'q' quote string

       • 'p' Selected string stripped from Pango markup (Needs to be a valid string)

       • 'f' filter string (user input)

       • 'F' quoted filter string (user input)

       Default: 's'

       --sseelleecctt _s_t_r_i_n_g

       Select first line that matches the given string

       --mmeessgg _s_t_r_i_n_g

       Add a message line below the filter entry box. Supports Pango markup.  For more information on supported markup see here ⟨https://developer.gnome.org/pygtk/stable/pango-markup-language.html⟩

       --dduummpp

       Dump the filtered list to stdout and quit.  This can be used to get the list as rrooffii would filter it.  Use together with --ffiilltteerr command.

       --iinnppuutt _f_i_l_e

       Reads from _f_i_l_e instead of stdin.

       --ppaasssswwoorrdd

       Hide the input text. This should not be considered secure!

       --mmaarrkkuupp--rroowwss

       Tell rrooffii that DMenu input is Pango markup encoded, and should be rendered.  See here ⟨https://developer.gnome.org/pygtk/stable/pango-markup-language.html⟩ for details about Pango markup.

       --mmuullttii--sseelleecctt

       Allow multiple lines to be selected. Adds a small selection indicator to the left of each entry.

       --ssyynncc

       Force rrooffii mode to first read all data from stdin before showing the selection window. This is original dmenu behavior.

       Note: the default asynchronous mode will also be automatically disabled if used with conflicting options, such as --dduummpp, --oonnllyy--mmaattcchh or --aauuttoo--sseelleecctt.

       --aassyynncc--pprree--rreeaadd _n_u_m_b_e_r

       Reads the first _n_u_m_b_e_r entries blocking, then switches to async mode.  This makes it feel more 'snappy'.

       _d_e_f_a_u_l_t: 25

       --wwiinnddooww--ttiittllee _t_i_t_l_e

       Set name used for the window title. Will be shown as Rofi - _t_i_t_l_e

       --ww _w_i_n_d_o_w_i_d

       Position rrooffii over the window with the given X11 window ID.

       --kkeeeepp--rriigghhtt

       Set ellipsize mode to start. So end of string is visible.

   MMeessssaaggee ddiiaalloogg
       --ee _m_e_s_s_a_g_e

       Pops up a message dialog (used internally for showing errors) with _m_e_s_s_a_g_e.  Message can be multi-line.

   OOtthheerr
       --ddrruunn--uussee--ddeesskkttoopp--ccaacchhee

       Build and use a cache with the content of desktop files. Usable for systems with slow hard drives.

       --ddrruunn--rreellooaadd--ddeesskkttoopp--ccaacchhee

       If ddrruunn--uussee--ddeesskkttoopp--ccaacchhee is enabled, rebuild a cache with the content of desktop files.

       --ppiidd _p_a_t_h

       Make rrooffii create a pid file and check this on startup. The pid file prevents multiple rrooffii instances from running simultaneously. This is useful when running rrooffii from a key-binding daemon.

       --ffaakkee--ttrraannssppaarreennccyy

       Enable fake transparency. This only works with transparent background color in the theme.

       --ffaakkee--bbaacckkggrroouunndd

       Select what to use as background for fake transparency. This can be 'background', 'screenshot' or a path to an image file (currently only supports png).

       --ddiissppllaayy--{{mmooddee}} _s_t_r_i_n_g

       Set the name to use for mode. This is used as prompt and in combi-browser.

       --cclliicckk--ttoo--eexxiitt --nnoo--cclliicckk--ttoo--eexxiitt

       Click the mouse outside of the rrooffii window to exit.

       Default: _e_n_a_b_l_e_d

   DDeebbuugg
       --nnoo--ccoonnffiigg

       Disable parsing of configuration. This runs rofi in _s_t_o_c_k mode.

       --nnoo--pplluuggiinnss

       Disables the loading of plugins.

       To get a trace with (lots of) debug information, set the following environment variable when executing rrooffii:

              G_MESSAGES_DEBUG=all

       The trace can be filtered by only outputting the relevant domains, for example:

              G_MESSAGES_DEBUG=Dialogs.DRun

       For more information on debugging, see the wiki ⟨https://github.com/DaveDavenport/rofi/wiki/Debugging%20Rofi⟩

PPAATTTTEERRNN
       To launch commands (for example, when using the ssh launcher), the user can enter the used command-line. The following keys can be used that will be replaced at runtime:

       • {{hhoosstt}}: the host to connect to

       • {{tteerrmmiinnaall}}: the configured terminal (see -terminal-emulator)

       • {{sssshh--cclliieenntt}}: the configured ssh client (see -ssh-client)

       • {{ccmmdd}}: the command to execute

       • {{wwiinnddooww}}: the window ID of the selected window (in wwiinnddooww--ccoommmmaanndd)

DDMMEENNUU RREEPPLLAACCEEMMEENNTT
       If aarrggvv[[00]] (calling command) is dmenu, rrooffii will start in dmenu mode.  This way it can be used as a drop-in replacement for dmenu. Just copy or symlink rrooffii to dmenu in $$PPAATTHH.

              ln -s /usr/bin/rofi /usr/bin/dmenu

TTHHEEMMIINNGG
       The theme format below describes the old (pre version 1.4) theme format. Please see rofi-theme(5) manpage for an updated manual.

       The theme setup allows you to specify colors per state, similar to ii33 Currently 3 states exist:

       • nnoorrmmaall: normal row

       • uurrggeenntt: highlighted row (urgent)

       • aaccttiivvee: highlighted row (active)

       For each state, the following 5 colors must be set:

       • bbgg: background color row

       • ffgg: text color

       • bbggaalltt: background color alternating row

       • hhllffgg: foreground color selected row

       • hhllbbgg: background color selected row

       The window background and border color should be specified separately. The key ccoolloorr--wwiinnddooww contains a tuple bbaacckkggrroouunndd,,bboorrddeerr,,sseeppaarraattoorr.  An example XXrreessoouurrcceess file:

              ! State:           'bg',     'fg',     'bgalt',  'hlbg',   'hlfg'
              rofi.color-normal: #fdf6e3,  #002b36,  #eee8d5,  #586e75,  #eee8d5
              rofi.color-urgent: #fdf6e3,  #dc322f,  #eee8d5,  #dc322f,  #fdf6e3
              rofi.color-active: #fdf6e3,  #268bd2,  #eee8d5,  #268bd2,  #fdf6e3

              !                  'background', 'border', 'separator'
              rofi.color-window: #fdf6e3,      #002b36,  #002b36

       Same settings can also be specified on the command-line:

              rofi -color-normal "#fdf6e3,#002b36,#eee8d5,#586e75,#eee8d5"

CCOOLLOORRSS
       RGB colors can be specified by either their X11 name or hexadecimal notation.  For example:

              white

       Or:

              #FFFFFF

       ARGB colors are also supported. These can be used to create a transparent window if (1) your Xserver supports TrueColor, and (2) you are running a composite manager.  For example:
           argb:FF444444

       Or:

              #FF444444

       The first two fields specify the alpha level. This determines the amount of transparency (00 everything, FF nothing). The other fields represent the actual color, in hex.

       Transparency can be used within rrooffii, for example if the selected background color is 50% transparent, the background color of the window will be visible through it.

KKEEYY BBIINNDDIINNGGSS
       rrooffii has the following key bindings:

       • CCttrrll--vv,, IInnsseerrtt: Paste from clipboard

       • CCttrrll--SShhiifftt--vv,, SShhiifftt--IInnsseerrtt: Paste primary selection

       • CCttrrll--uu: Clear the line

       • CCttrrll--aa: Beginning of line

       • CCttrrll--ee: End of line

       • CCttrrll--ff,, RRiigghhtt: Forward one character

       • AAlltt--ff,, CCttrrll--RRiigghhtt: Forward one word

       • CCttrrll--bb,, LLeefftt: Back one character

       • AAlltt--bb,, CCttrrll--LLeefftt: Back one word

       • CCttrrll--dd,, DDeelleettee: Delete character

       • CCttrrll--AAlltt--dd: Delete word

       • CCttrrll--hh,, BBaacckkssppaaccee,, SShhiifftt--BBaacckkssppaaccee: Backspace (delete previous character)

       • CCttrrll--AAlltt--hh: Delete previous word

       • CCttrrll--jj,,CCttrrll--mm,,EEnntteerr: Accept entry

       • CCttrrll--nn,,DDoowwnn: Select next entry

       • CCttrrll--pp,,UUpp: Select previous entry

       • PPaaggee UUpp: Go to previous page

       • PPaaggee DDoowwnn: Go to next page

       • CCttrrll--PPaaggee UUpp: Go to previous column

       • CCttrrll--PPaaggee DDoowwnn: Go to next column

       • CCttrrll--EEnntteerr: Use entered text as a command (in sssshh//rruunn mmooddii)

       • SShhiifftt--EEnntteerr: Launch the application in a terminal (in run mode)

       • SShhiifftt--EEnntteerr: Return the selected entry and move to the next item while keeping rrooffii open. (in dmenu)

       • SShhiifftt--RRiigghhtt: Switch to the next mode. The list can be customized with the --sswwiittcchheerrss argument.

       • SShhiifftt--LLeefftt: Switch to the previous mode. The list can be customized with the --sswwiittcchheerrss argument.

       • CCttrrll--TTaabb: Switch to the next mode. The list can be customized with the --sswwiittcchheerrss argument.

       • CCttrrll--SShhiifftt--TTaabb: Switch to the previous mode. The list can be customized with the --sswwiittcchheerrss argument.

       • CCttrrll--ssppaaccee: Set selected item as input text.

       • SShhiifftt--DDeell: Delete entry from history.

       • ggrraavvee: Toggle case sensitivity.

       • AAlltt--ggrraavvee: Toggle sorting.

       • AAlltt--SShhiifftt--SS: Take a screenshot and store it in the Pictures directory.

       To  get  a  full list of key bindings on the commandline, see rrooffii --hh.  The options starting with --kkbb are keybindings.  Key bindings can be modified using the configuration systems.  To get a
       searchable list of key bindings, run rrooffii --sshhooww kkeeyyss.

       A key binding starting with !! will act when all keys have been released.

AAvvaaiillaabbllee MMooddii
   wwiinnddooww
       Show a list of all the windows and allow switching between them.  Pressing the ddeelleettee--eennttrryy binding (sshhiifftt--ddeelleettee) will close the window.  Pressing the aacccceepptt--ccuussttoomm binding (ccoonnttrrooll--eenntteerr or
       sshhiifftt--eenntteerr) will run a command on the window.  (See option wwiinnddooww--ccoommmmaanndd );

   wwiinnddoowwccdd
       Shows a list of the windows on the current desktop and allows switching between them.  Pressing the ddeelleettee--eennttrryy binding (sshhiifftt--ddeelleettee) will kill the window.  Pressing the aacccceepptt--ccuussttoomm bind‐
       ing (ccoonnttrrooll--eenntteerr or sshhiifftt--eenntteerr) will run a command on the window.  (See option wwiinnddooww--ccoommmmaanndd );

   rruunn
       Shows a list of executables in $$PPAATTHH and can launch them (optional in a terminal).  Pressing the ddeelleettee--eennttrryy binding (sshhiifftt--ddeelleettee) will remove this entry from the run history.  Pressing the
       aacccceepptt--ccuussttoomm binding (ccoonnttrrooll--eenntteerr or sshhiifftt--eenntteerr) will run the command in a terminal.

   ddrruunn
       Same  as  the rruunn launches, but the list is created from the installed desktop files. It automatically launches them in a terminal if specified in the Desktop File.  Pressing the ddeelleettee--eennttrryy
       binding (sshhiifftt--ddeelleettee) will remove this entry from the run history.  Pressing the aacccceepptt--ccuussttoomm binding (ccoonnttrrooll--eenntteerr or sshhiifftt--eenntteerr) with custom input (no entry matching) will run the  com‐
       mand in a terminal.

   sssshh
       Shows a list of SSH targets based on your sssshh config file, and allows to quickly sssshh into them.

   kkeeyyss
       Shows a searchable list of key bindings.

   ssccrriipptt
       Allows custom scripted Modi to be added.

   ccoommbbii
       Combines multiple modi in one list. Specify which modi are included with the --ccoommbbii--mmooddii option.

       When using the combi mode, a _!_b_a_n_g can be used to filter the results by modi.  All modi that match the bang as a prefix are included.  For example, say you have specified --ccoommbbii--mmooddii rruunn,,wwiinn‐‐
       ddooww,,wwiinnddoowwccdd. If your query begins with the bang !!ww, only results from the wwiinnddooww and wwiinnddoowwccdd modi are shown, even if the rest of the input text would match results from rruunn.

FFAAQQ
   TThhee tteexxtt iinn tthhee wwiinnddooww sswwiittcchheerr iiss nnoott nniicceellyy aalliiggnneedd..
       Try using a mono-space font.

   TThhee wwiinnddooww iiss ccoommpplleetteellyy bbllaacckk..
       Check quotes used on the command-line: you might have used ““ ("smart quotes") instead of "" ("machine quotes").

   WWhhaatt ddooeess tthhee iiccoonn iinn tthhee ttoopp rriigghhtt sshhooww??
       The indicator shows:

              ` ` Case insensitive and no sorting.
              `-` Case sensitivity enabled, no sorting.
              `+` Case insensitive and Sorting enabled
              `±` Sorting and Case sensitivity enabled"

EEXXAAMMPPLLEESS
       Some basic usage examples of rrooffii:

       Show the run dialog:

              rofi -modi run -show run

       Show the run dialog, and allow switching to Desktop File run dialog (ddrruunn):

              rofi -modi run,drun -show run

       Combine the run and Desktop File run dialog (ddrruunn):

              rofi -modi combi -show combi -combi-modi run,drun

       Combine the run and Desktop File run dialog (ddrruunn), and allow switching to window switcher:

              rofi -modi combi,window -show combi -combi-modi run,drun

       Run rrooffii full monitor width at the top of the monitor like a dropdown menu:

              rofi -show run -width 100 -location 1 -lines 5 -bw 2 -yoffset -2

       Pop up a text message claiming that this is the end:

              rofi -e "This is the end"

       Pop up a text message in red, bold font claiming that this is still the end:

              rofi -e "<span color='red'><b>This is still the end</b></span>" -markup

       Show all key bindings:

              rofi -show keys

       Use qqaallcc to get a simple calculator in rrooffii:

               rofi -show calc -modi "calc:qalc +u8 -nocurrencies"

ii33
       In i3 ⟨http://i3wm.org/⟩ you want to bind rrooffii to be launched on key release. Otherwise, it cannot grab the keyboard.  See also the i3 manual ⟨http://i3wm.org/docs/userguide.html⟩:

       Some tools (such as iimmppoorrtt or xxddoottooooll) might be unable to run upon a KeyPress event, because the keyboard/pointer is still grabbed. For these situations, the ----rreelleeaassee flag can be used, as it
       will execute the command after the keys have been released.

LLIICCEENNSSEE
              MIT/X11

              Permission is hereby granted, free of charge, to any person obtaining
              a copy of this software and associated documentation files (the
              "Software"), to deal in the Software without restriction, including
              without limitation the rights to use, copy, modify, merge, publish,
              distribute, sublicense, and/or sell copies of the Software, and to
              permit persons to whom the Software is furnished to do so, subject to
              the following conditions:

              The above copyright notice and this permission notice shall be
              included in all copies or substantial portions of the Software.

              THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
              OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
              MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
              IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
              CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
              TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
              SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

WWEEBBSSIITTEE
       rrooffii website can be found here ⟨https://davedavenport.github.io/rofi/⟩

SSUUPPPPOORRTT
       rrooffii support can be obtained here ⟨irc://irc.freenode.net/#rofi⟩ (#rofi on irc.freenode.net), or via the forum ⟨https://reddit.com/r/qtools//⟩

DDEEBBUUGGGGIINNGG
       Please see this ⟨https://github.com/DaveDavenport/rofi/wiki/Debugging Rofi⟩ wiki entry.

IISSSSUUEE TTRRAACCKKEERR
       The rrooffii issue tracker can be found here ⟨https://github.com/DaveDavenport/rofi/issues⟩

       When creating an issue, please read this ⟨https://github.com/DaveDavenport/rofi/blob/master/.github/CONTRIBUTING.md⟩ first.

SSEEEE AALLSSOO
       rrooffii--sseennssiibbllee--tteerrmmiinnaall((11)), ddmmeennuu((11)), rrooffii--tthheemmee((55)), rrooffii--ssccrriipptt((55)), rrooffii--tthheemmee--sseelleeccttoorr((11))

AAUUTTHHOORR..IIPP •• 22
       Qball Cow ⟨qball@gmpclient.org⟩

       • Rasmus Steinke ⟨rasi@xssn.at⟩

       • Quentin Glidic ⟨sardemff7+rofi@sardemff7.net⟩

       Original code based on work by: Sean Pringle ⟨sean.pringle@gmail.com⟩

       For a full list of authors, check the AAUUTTHHOORRSS file.

                                                                                                 rofi                                                                                          ROFI(1)
